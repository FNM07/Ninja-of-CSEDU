#include <SFML/Graphics.hpp>
#include<time.h>
#include<iostream>
#include<stdio.h>

using namespace std;
using namespace sf;

bool isCollide(Sprite  s1, Sprite s2)
{
	return s1.getGlobalBounds().intersects(s2.getGlobalBounds());
}
int main()
{

	int i, xod=600,upward=200;
	enum Direction  { Up, Left, Down, Right };
	Vector2i source(0, Up);
	float frameCounter = 0, switchFrame = 100, frameSpeed = 500;
	RenderWindow window(VideoMode(800, 600), "The Game!");

	window.setFramerateLimit(80);


	Texture pTexture,bart;
	Sprite playerImage, bars;
	Clock clock;
	if (!pTexture.loadFromFile("takku.png"))
		cout << "Error could not load player image" << endl;

	bart.loadFromFile("exp1.png");
	bars.setTexture(bart);
	playerImage.setTexture(pTexture);


	while (window.isOpen())
	{


		Event e;
		while (window.pollEvent(e))
		{
			switch (e.type)
			{
			case Event::Closed:
				window.close();
				break;
			}
		}


		if (Keyboard::isKeyPressed(Keyboard::Up))
		{
			source.y = Up;
			playerImage.move(0, -1);
		}
		else if (Keyboard::isKeyPressed(Keyboard::Down))
		{
			source.y = Down;
			playerImage.move(0, 1);
		}
		else if (Keyboard::isKeyPressed(Keyboard::Left))
		{
			source.y = Left;
			playerImage.move(-1, 0);
		}
		else if (Keyboard::isKeyPressed(Keyboard::Right))
		{
			source.y = Right;
			playerImage.move(1, 0);
		}

		cout << clock.getElapsedTime().asSeconds() << endl;

		frameCounter += frameSpeed *  clock.restart().asSeconds();
		if (frameCounter >= switchFrame)
		{
			frameCounter = 0;
			source.x++;
			if (source.x * 64 >= pTexture.getSize().x)
				source.x = 0;
		}




		bars.setPosition(xod, 200);
		xod--;
		if (xod <= 0)  xod = 600;
		playerImage.setTextureRect(IntRect(source.x * 64, source.y * 64, 64, 64));

		if (isCollide(playerImage, bars))
			playerImage.move(0, -1);
			




		window.draw(playerImage);
		window.draw(bars);
		window.display();
		window.clear();



	}

	return 0;
}